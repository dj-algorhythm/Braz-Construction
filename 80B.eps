%!PS-Adobe-2.0 EPSF-1.2%%Creator: Adobe Illustrator(TM) 5.5%%For: (MARWAN ARIDI ) (ACG)%%Title: (V10-83B)%%CreationDate: (1/31/96) (3:33 PM)%%DocumentProcessColors: Black%%DocumentProcSets: Adobe_packedarray 1.0 0%%DocumentSuppliedProcSets: Adobe_packedarray 1.0 0%%DocumentProcSets: Adobe_cmykcolor 1.1 0%%DocumentSuppliedProcSets: Adobe_cmykcolor 1.1 0%%DocumentProcSets: Adobe_cshow 1.1 0%%DocumentSuppliedProcSets: Adobe_cshow 1.1 0%%DocumentProcSets: Adobe_customcolor 1.0 0%%DocumentSuppliedProcSets: Adobe_customcolor 1.0 0%%DocumentProcSets: Adobe_pattern 1.9 0%%DocumentSuppliedProcSets: Adobe_pattern 1.9 0%%DocumentProcSets: Adobe_Illustrator88 1.19 0%%DocumentSuppliedProcSets: Adobe_Illustrator88 1.19 0%%BoundingBox: 146 181 461 584%%ColorUsage: Black&White%%TemplateBox: 306 396 306 396%%TileBox: 30 31 582 761%%DocumentPreview: Macintosh_ColorPic%%EndComments%%BeginProcSet: Adobe_packedarray 1.0 0userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndProcSetAdobe_packedarray /initialize get exec%%BeginProcSet: Adobe_cshow 1.1 0currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_customcolor 1.0 0currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_pattern 1.10 0currentpacking true setpackinguserdict /Adobe_pattern 14 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern begin	Adobe_pattern		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			break			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll pop pop pop pop pop pop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	pop pop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{pop pop}			{pop pop pop true}			{pop pop pop pop pop pop pop true}			{pop true}			pathforall			} stopped			{			pop pop pop pop pop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		pop pop		}		{		pop pop pop pop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternclipAdobe_pattern /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern /patternfill get exec			} pathforall		pop pop	pop		} stopped			{			pop pop pop pop pop			patternclip			Adobe_pattern /patternfill get exec			} if	}	{	patternclip	Adobe_pattern /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern /patternmatrix get 4 1 roll	} if	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	6 index 6 index 6 index	Adobe_pattern /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_Illustrator88 1.20 0currentpacking true setpackinguserdict /Adobe_Illustrator88 73 dict dup begin put/initialize{userdict /Adobe_Illustrator88_vars 31 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_a null def/_as null def/_tt 2 array def/_tl 2 array def/_tm matrix def/t {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator88 beginAdobe_Illustrator88 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator88 beginAdobe_Illustrator88_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator88_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/ss{3 -1 roll pop4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/sp{exch pop	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where{pop true setstrokeadjust/c{curveto} def/C/c load def/v{currentpoint 6 2 roll curveto} def/V/v load def/y{2 copy curveto} def/Y/y load def/l{lineto} def/L/l load def/m{moveto} def}{/c{pl curveto} def/C/c load def/v{currentpoint 6 2 roll pl curveto} def/V/v load def/y{pl 2 copy curveto} def/Y/y load def/l{pl lineto} def/L/l load def/m{pl moveto} def} ifelse/d{setdash} def/cfcurrentflat def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{newpath} def/n/N load def/F{_pf} def/f{closepathF} def/S{_ps} def/s{closepathS} def/B{gsave F grestoreS} def/b{closepathB} def/W{clip} def/ta{_as moveto_tt aload pop 4 -2 roll} def/tl{_tl aload pop translate} def/as{{0 0}{2 copy _tt aload pop 4 -2 roll swexch neg 2 div exch neg 2 div}{2 copy _tt aload pop 4 -2 roll swexch neg exch neg}{0 0}} cvlit def/z{/_a exch ddef/_as as _a get ddef_a 2 le	{	0 _tt astore pop	0 exch neg _tl astore pop	}	{	0 exch neg _tt astore pop	neg 0 _tl astore pop	} ifelseexch findfont exch scalefont setfont} def/tm{_tm currentmatrix popconcat} def/I{tm/t	{	ta sp	tl	} ddef} def/o{tm/t	{	ta 4 npop	tl	newpath	} ddef} def/e{tm/t	{	ta _psf	tl	newpath	} ddef} def/r{tm/t	{	ta _tm _pss	tl	newpath	} ddef} def/a{tm/t	{	2 copy	ta _psf	newpath	ta _tm _pss	tl	newpath	} ddef} def/T{_tm setmatrix} def/Z{popfindfont begincurrentdict dup length 1 add dict begin	{	1 index /FID ne		{		def		}		{		2 npop		} ifelse	} forall/FontName exch def dup length 0 ne	{	/Encoding Encoding 256 array copy def	0 exch		{		dup type /nametype eq			{			Encoding 2 index 2 index put pop			1 add			}			{			exch pop			} ifelse		} forall	} if popcurrentdict dup end end/FontName get exch definefont pop} def/u{} def/U{} def/q{gsave} def/Q{grestore} def/`{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprintpop} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			10 copy 6 npop exch pop patternashow			}			{			pop			7 copy 3 npop exch pop ashow			} ifelse		grestore		pop		} for	pop	} forrestore4 npop newpath} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			11 copy 6 npop 3 -1 roll pop patternashowstroke			}			{			pop			8 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestore5 npop newpath} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking%%EndProcSet%%EndProlog%%BeginSetupAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern /initialize get execAdobe_Illustrator88 /initialize get exec%%BeginPattern: (Yellow Stripe)(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [%%Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(0 i0 J 0 j 3.6 w 4 M []0 d%%Note:8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS) &] E%%EndPattern%%EndSetup0 A0 O0.5 g0 R0 G0 i0 J 0 j 0.56 w 4 M []0 d%%Note:303.3508 535.7492 m302.2775 548.3029 297.8441 549.5162 y299.3374 545.9695 295.464 545.9695 v291.5906 545.9695 291.7773 549.4229 290.0972 550.1229 c288.4172 550.8229 286.0838 549.1429 y286.7838 552.3629 289.5372 554.2413 293.0023 554.2413 c296.4674 554.2413 299.0574 552.3163 y295.5573 558.8264 295.5573 562.6065 v295.5573 566.3866 297.2024 568.3816 298.9524 570.0616 c300.7024 571.7417 301.7875 570.3766 y300.1774 566.8416 303.7738 566.1416 Y307.3701 566.8416 305.7601 570.3766 v306.8451 571.7417 308.5951 570.0616 v310.3451 568.3816 311.9902 566.3866 311.9902 562.6065 c311.9902 558.8264 308.4901 552.3163 y311.0802 554.2413 314.5452 554.2413 v318.0103 554.2413 320.7637 552.3629 321.4637 549.1429 c319.1303 550.8229 317.4503 550.1229 v315.7703 549.4229 315.9569 545.9695 312.0835 545.9695 c308.2101 545.9695 309.7035 549.5162 y305.27 548.3029 304.1967 535.7492 v303.3508 535.7492 lb0 g1 w310.0301 528.7958 m305.9701 527.8157 305.9701 533.2759 v305.9701 536.8693 309.4701 537.896 311.0102 537.6159 c311.9744 537.4407 315.0703 536.9626 314.6036 532.3892 c316.9369 534.1625 319.6437 533.2292 v322.3504 532.2958 328.0438 530.0558 332.804 530.0558 c337.5641 530.0558 342.3242 532.3892 342.3242 538.3626 c342.3242 543.2161 337.7507 544.3361 336.444 544.3361 c335.1374 544.3361 333.1773 543.9627 333.1773 541.256 c333.1773 539.3893 335.5107 539.6693 y337.004 539.7627 337.004 541.1627 v337.004 542.5627 336.3507 542.4694 y340.8308 542.2827 340.8308 538.6426 v340.8308 535.0026 338.1241 535.7492 336.5374 535.7492 c329.5372 535.7492 325.4305 544.2428 317.9636 544.2428 c310.4968 544.2428 304.43 538.8293 304.43 533.2292 c304.43 527.6291 308.2568 525.949 311.5235 525.949 c314.7902 525.949 314.2302 527.4424 314.2302 528.4691 c314.2302 529.4958 311.5235 531.5492 310.0301 528.7958 cf1 g318.617 542.7494 m326.0838 540.976 326.5505 536.8693 v326.835 534.3653 321.3237 536.4959 319.8304 537.3359 c318.337 538.176 314.1369 542.1894 318.617 542.7494 cf0 g319.9237 539.4827 m324.4972 540.3227 324.4971 549.7495 v324.4971 556.4697 318.337 559.5498 y320.017 561.6965 326.6438 561.6965 v356.6978 561.6965 361.1779 530.8958 380.4983 530.8958 c393.1919 530.8958 393.6586 537.896 393.6586 540.7893 c393.6586 543.6828 391.4185 546.3895 385.9118 546.3895 c383.1117 546.3895 382.085 543.9627 y379.3783 550.1229 384.4184 551.5229 v380.5916 553.1096 377.4183 549.8429 v379.1916 547.2295 379.1916 544.8028 v379.1916 542.376 375.6449 539.4827 379.845 539.4827 c384.045 539.4827 383.2984 542.4694 y384.9317 536.4959 377.7916 535.9359 v371.1851 535.4177 368.458 540.976 369.4847 547.4162 c358.4527 542.9143 356.4178 553.6696 v355.7644 557.123 357.3511 559.0831 y358.9378 560.7631 359.6845 558.4297 v360.4312 556.0963 358.0978 556.843 y356.5263 551.5672 361.5513 552.1763 v364.6313 552.5496 366.0313 552.0829 365.8447 550.0296 c365.6839 548.261 364.538 547.8828 y361.8312 547.9762 366.5914 547.9762 v371.3515 547.9762 372.3781 555.3497 382.1783 555.3497 c391.9786 555.3497 395.712 546.1095 395.712 541.816 c395.712 537.5226 394.1253 534.9092 y398.232 537.8026 401.8721 537.8026 v405.5122 537.8026 406.2588 533.9759 404.2055 532.5758 c405.6988 531.3625 405.6988 529.1224 v405.6988 526.8824 403.7388 526.4157 402.2454 526.4157 c400.7521 526.4157 400.7521 527.3491 400.7521 528.3758 c400.7521 529.4024 402.4321 530.0558 403.8321 529.1224 c404.2988 533.5092 398.1387 533.5092 v390.8585 533.5092 389.5518 525.0158 375.3649 525.0157 c350.351 525.0157 351.8444 550.3096 326.8305 550.3096 c326.8305 538.0826 319.9237 539.4827 vf1 g328.8839 559.1764 m331.8706 559.2697 331.8706 555.3497 v331.8706 551.4296 328.7906 552.0829 y326.0838 551.5229 326.0838 556.0963 v326.0838 558.8964 328.8839 559.1764 yf337.0407 558.0879 m340.0231 557.9021 339.6573 553.9992 v339.2915 550.0962 336.2859 551.0341 y333.5388 550.7291 333.9654 555.2825 v334.2267 558.0704 337.0407 558.0879 yf345.4042 554.5096 m347.9297 552.9123 345.7318 549.6664 v343.5339 546.4204 341.3498 548.6883 y338.7945 549.7422 341.3587 553.5292 v342.9287 555.8477 345.4042 554.5096 yf351.2368 549.9261 m353.7623 548.3287 351.5644 545.0828 v349.3664 541.8368 347.1824 544.1047 y344.6271 545.1586 347.1913 548.9456 v348.7613 551.2641 351.2368 549.9261 yf356.7197 543.9087 m358.9356 541.9039 356.216 539.0805 v353.4964 536.2572 351.7314 538.8646 y349.3934 540.339 352.5663 543.6329 v354.5088 545.6495 356.7197 543.9087 yf361.4507 539.3313 m364.1073 537.9632 362.2046 534.5359 v360.3019 531.1085 357.9261 533.1748 y355.2878 533.9989 357.5076 537.9975 v358.8666 540.4456 361.4507 539.3313 yf367.0065 534.5753 m369.1596 533.4124 367.6175 530.4991 v366.0754 527.5858 364.1499 529.3422 y362.0116 530.0427 363.8107 533.4415 v364.9122 535.5224 367.0065 534.5753 yf372.6803 530.7939 m374.3544 530.042 373.3604 527.7784 v372.3664 525.5149 370.83 526.7232 y369.1922 527.1302 370.3519 529.7709 v371.0619 531.3878 372.6803 530.7939 yf378.8183 529.8691 m380.413 529.4389 379.8515 527.286 v379.29 525.1331 377.7527 525.9884 y376.2394 526.1172 376.8945 528.6289 v377.2956 530.1667 378.8183 529.8691 yf372.4715 548.0695 m374.9915 547.8828 374.9915 544.2428 v374.9915 541.1627 373.6848 540.7893 372.6582 540.7893 c371.9115 540.7893 370.2314 541.256 370.6048 544.7094 c370.9781 548.1628 371.0715 547.9762 372.4715 548.0695 cf0 g297.5174 528.7958 m301.5774 527.8157 301.5775 533.2759 v301.5775 536.8693 298.0774 537.896 296.5374 537.6159 c295.5731 537.4407 292.4773 536.9626 292.944 532.3892 c290.6106 534.1625 287.9039 533.2292 v285.1971 532.2958 279.5037 530.0558 274.7436 530.0558 c269.9835 530.0558 265.2233 532.3892 265.2234 538.3626 c265.2234 543.2161 269.7968 544.3361 271.1035 544.3361 c272.4102 544.3361 274.3702 543.9627 274.3702 541.256 c274.3702 539.3893 272.0368 539.6693 y270.5435 539.7627 270.5435 541.1627 v270.5435 542.5627 271.1968 542.4694 y266.7167 542.2827 266.7167 538.6426 v266.7167 535.0026 269.4234 535.7492 271.0102 535.7492 c278.0103 535.7492 282.117 544.2428 289.5839 544.2428 c297.0507 544.2428 303.1175 538.8293 303.1175 533.2292 c303.1175 527.6291 299.2908 525.949 296.024 525.949 c292.7573 525.949 293.3173 527.4424 293.3173 528.4691 c293.3173 529.4958 296.024 531.5492 297.5174 528.7958 cf1 g288.9305 542.7494 m281.4637 540.976 280.997 536.8693 v280.7125 534.3653 286.2238 536.4959 287.7172 537.3359 c289.2105 538.176 293.4106 542.1894 288.9305 542.7494 cf0 g287.6238 539.4827 m283.0504 540.3227 283.0504 549.7495 v283.0504 556.4697 289.2105 559.5498 y287.5305 561.6965 280.9037 561.6965 v250.8497 561.6965 246.3696 530.8958 227.0492 530.8958 c214.3556 530.8958 213.8889 537.896 213.8889 540.7893 c213.8889 543.6828 216.129 546.3895 221.6358 546.3895 c224.4358 546.3895 225.4625 543.9627 y228.1692 550.1229 223.1291 551.5229 v226.9559 553.1096 230.1293 549.8429 v228.3559 547.2295 228.3559 544.8028 v228.3559 542.376 231.9027 539.4827 227.7026 539.4827 c223.5025 539.4827 224.2492 542.4694 y222.6158 536.4959 229.7559 535.9359 v236.3625 535.4177 239.0895 540.976 238.0628 547.4162 c249.0949 542.9143 251.1297 553.6696 v251.7831 557.123 250.1964 559.0831 y248.6097 560.7631 247.863 558.4297 v247.1163 556.0963 249.4497 556.843 y251.0212 551.5672 245.9963 552.1763 v242.9162 552.5496 241.5162 552.0829 241.7029 550.0296 c241.8636 548.261 243.0096 547.8828 y245.7163 547.9762 240.9562 547.9762 v236.1961 547.9762 235.1694 555.3497 225.3692 555.3497 c215.569 555.3497 211.8356 546.1095 211.8356 541.816 c211.8356 537.5226 213.4223 534.9092 y209.3155 537.8026 205.6754 537.8026 v202.0354 537.8026 201.2887 533.9759 203.3421 532.5758 c201.8487 531.3625 201.8487 529.1224 v201.8487 526.8824 203.8087 526.4157 205.3021 526.4157 c206.7955 526.4157 206.7955 527.3491 206.7955 528.3758 c206.7955 529.4024 205.1154 530.0558 203.7154 529.1224 c203.2487 533.5092 209.4088 533.5092 v216.689 533.5092 217.9957 525.0158 232.1827 525.0157 c257.1965 525.0157 255.7032 550.3096 280.717 550.3096 c280.717 538.0826 287.6238 539.4827 vf1 g278.6636 559.1764 m275.6769 559.2697 275.6769 555.3497 v275.6769 551.4296 278.757 552.0829 y281.4637 551.5229 281.4637 556.0963 v281.4637 558.8964 278.6636 559.1764 yf270.5068 558.0879 m267.5244 557.9021 267.8902 553.9992 v268.256 550.0962 271.2616 551.0341 y274.0088 550.7291 273.5821 555.2825 v273.3208 558.0704 270.5068 558.0879 yf262.1433 554.5096 m259.6178 552.9123 261.8158 549.6664 v264.0137 546.4204 266.1977 548.6883 y268.753 549.7422 266.1888 553.5292 v264.6188 555.8477 262.1433 554.5096 yf256.3107 549.9261 m253.7853 548.3287 255.9832 545.0828 v258.1811 541.8368 260.3652 544.1047 y262.9204 545.1586 260.3562 548.9456 v258.7863 551.2641 256.3107 549.9261 yf250.8278 543.9087 m248.6119 541.9039 251.3315 539.0805 v254.0511 536.2572 255.8161 538.8646 y258.1541 540.339 254.9813 543.6329 v253.0387 545.6495 250.8278 543.9087 yf246.0968 539.3313 m243.4402 537.9632 245.3429 534.5359 v247.2456 531.1085 249.6215 533.1748 y252.2598 533.9989 250.04 537.9975 v248.6809 540.4456 246.0968 539.3313 yf240.541 534.5753 m238.3879 533.4124 239.93 530.4991 v241.4721 527.5858 243.3976 529.3422 y245.5359 530.0427 243.7368 533.4415 v242.6353 535.5224 240.541 534.5753 yf234.8673 530.7939 m233.1931 530.042 234.1871 527.7784 v235.1811 525.5149 236.7176 526.7232 y238.3553 527.1302 237.1956 529.7709 v236.4856 531.3878 234.8673 530.7939 yf228.7293 529.8691 m227.1345 529.4389 227.696 527.286 v228.2575 525.1331 229.7948 525.9884 y231.3081 526.1172 230.653 528.6289 v230.2519 530.1667 228.7293 529.8691 yf235.0761 548.0695 m232.556 547.8828 232.556 544.2428 v232.556 541.1627 233.8627 540.7893 234.8894 540.7893 c235.6361 540.7893 237.3161 541.256 236.9428 544.7094 c236.5694 548.1628 236.4761 547.9762 235.0761 548.0695 cf0.25 g303.7738 583.1519 m301.4375 583.5019 301.4375 580.6319 v301.4375 577.7618 302.0937 576.8168 303.7738 576.8168 C305.4538 576.8168 306.1101 577.7618 306.1101 580.6319 c306.1101 583.5019 303.7738 583.1519 Yf0 g303.7738 569.6066 m301.8225 575.5918 298.4624 575.5918 v295.1023 575.5918 294.1923 574.4017 y294.8573 577.9368 298.1474 577.9368 v301.4375 577.9368 303.7738 574.5067 Y306.1101 577.9368 309.4001 577.9368 v312.6902 577.9368 313.3552 574.4017 y312.4452 575.5918 309.0851 575.5918 v305.725 575.5918 303.7738 569.6066 Yf1 g303.7738 549.0495 m300.2707 550.9629 300.2708 558.8497 v300.2708 563.9365 303.7738 564.0765 Y307.2768 563.9365 307.2768 558.8497 v307.2768 550.9629 303.7738 549.0495 Yf233.3085 534.1159 m233.3085 534.1159 l233.3085 534.1159 lf233.3085 534.1159 m233.3085 534.1159 l233.3085 534.1159 lf0 R0.5 G2.5 w454.6532 476.3647 m413.4924 517.3155 l192.9877 517.3155 l151.8268 476.3647 l151.8268 287.9557 l192.9877 247.0048 l413.4924 247.0048 l454.6532 287.9557 l454.6532 476.3647 ls0.75 G447.5131 289.4257 m411.3923 254.1449 l194.6677 254.1449 l159.807 289.4257 l159.807 474.8946 l194.6677 510.1754 l411.3923 510.1754 l447.5131 474.8946 l447.5131 289.4257 ls0 O0.5 g0 G0.56 w303.3508 228.5711 m302.2775 216.0175 297.8441 214.8041 y299.3374 218.3508 295.464 218.3508 v291.5906 218.3508 291.7773 214.8974 290.0972 214.1974 c288.4172 213.4974 286.0838 215.1774 y286.7838 211.9574 289.5372 210.079 293.0023 210.079 c296.4674 210.079 299.0574 212.004 y295.5573 205.4939 295.5573 201.7138 v295.5573 197.9337 297.2024 195.9387 298.9524 194.2586 c300.7024 192.5786 301.7875 193.9436 y300.1774 197.4787 303.7738 198.1787 Y307.3701 197.4787 305.7601 193.9436 v306.8451 192.5786 308.5951 194.2586 v310.3451 195.9387 311.9902 197.9337 311.9902 201.7138 c311.9902 205.4939 308.4901 212.004 y311.0802 210.079 314.5452 210.079 v318.0103 210.079 320.7637 211.9574 321.4637 215.1774 c319.1303 213.4974 317.4503 214.1974 v315.7703 214.8974 315.9569 218.3508 312.0835 218.3508 c308.2101 218.3508 309.7035 214.8041 y305.27 216.0175 304.1967 228.5711 v303.3508 228.5711 lb0 g1 w310.0301 235.5245 m305.9701 236.5046 305.9701 231.0444 v305.9701 227.451 309.4701 226.4243 311.0102 226.7043 c311.9744 226.8796 315.0703 227.3577 314.6036 231.9311 c316.9369 230.1578 319.6437 231.0911 v322.3504 232.0245 328.0438 234.2645 332.804 234.2645 c337.5641 234.2645 342.3242 231.9311 342.3242 225.9577 c342.3242 221.1042 337.7507 219.9842 336.444 219.9842 c335.1374 219.9842 333.1773 220.3575 333.1773 223.0643 c333.1773 224.931 335.5107 224.651 y337.004 224.5576 337.004 223.1576 v337.004 221.7576 336.3507 221.8509 y340.8308 222.0376 340.8308 225.6777 v340.8308 229.3177 338.1241 228.5711 336.5374 228.5711 c329.5372 228.5711 325.4305 220.0775 317.9636 220.0775 c310.4968 220.0775 304.43 225.491 304.43 231.0911 c304.43 236.6912 308.2568 238.3713 311.5235 238.3713 c314.7902 238.3713 314.2302 236.8779 314.2302 235.8512 c314.2302 234.8245 311.5235 232.7711 310.0301 235.5245 cf1 g318.617 221.5709 m326.0838 223.3443 326.5505 227.451 v326.835 229.955 321.3237 227.8244 319.8304 226.9844 c318.337 226.1443 314.1369 222.1309 318.617 221.5709 cf0 g319.9237 224.8376 m324.4972 223.9976 324.4971 214.5708 v324.4971 207.8506 318.337 204.7705 y320.017 202.6238 326.6438 202.6238 v356.6978 202.6238 361.1779 233.4245 380.4983 233.4245 c393.1919 233.4245 393.6586 226.4243 393.6586 223.5309 c393.6586 220.6376 391.4185 217.9308 385.9118 217.9308 c383.1117 217.9308 382.085 220.3575 y379.3783 214.1974 384.4184 212.7974 v380.5916 211.2107 377.4183 214.4774 v379.1916 217.0908 379.1916 219.5175 v379.1916 221.9442 375.6449 224.8376 379.845 224.8376 c384.045 224.8376 383.2984 221.8509 y384.9317 227.8244 377.7916 228.3844 v371.1851 228.9026 368.458 223.3443 369.4847 216.9041 c358.4527 221.406 356.4178 210.6507 v355.7644 207.1973 357.3511 205.2372 y358.9378 203.5572 359.6845 205.8906 v360.4312 208.2239 358.0978 207.4773 y356.5263 212.7531 361.5513 212.144 v364.6313 211.7707 366.0313 212.2374 365.8447 214.2908 c365.6839 216.0593 364.538 216.4375 y361.8312 216.3441 366.5914 216.3441 v371.3515 216.3441 372.3781 208.9706 382.1783 208.9706 c391.9786 208.9706 395.712 218.2108 395.712 222.5043 c395.712 226.7977 394.1253 229.4111 y398.232 226.5177 401.8721 226.5177 v405.5122 226.5177 406.2588 230.3444 404.2055 231.7445 c405.6988 232.9578 405.6988 235.1979 v405.6988 237.4379 403.7388 237.9046 402.2454 237.9046 c400.7521 237.9046 400.7521 236.9712 400.7521 235.9445 c400.7521 234.9179 402.4321 234.2645 403.8321 235.1979 c404.2988 230.8111 398.1387 230.8111 v390.8585 230.8111 389.5518 239.3045 375.3649 239.3046 c350.351 239.3046 351.8444 214.0107 326.8305 214.0107 c326.8305 226.2377 319.9237 224.8376 vf1 g328.8839 205.1439 m331.8706 205.0505 331.8706 208.9706 v331.8706 212.8907 328.7906 212.2374 y326.0838 212.7974 326.0838 208.2239 v326.0838 205.4239 328.8839 205.1439 yf337.0407 206.2324 m340.0231 206.4182 339.6573 210.3211 v339.2915 214.2241 336.2859 213.2862 y333.5388 213.5912 333.9654 209.0378 v334.2267 206.2499 337.0407 206.2324 yf345.4042 209.8106 m347.9297 211.408 345.7318 214.6539 v343.5339 217.8999 341.3498 215.632 y338.7945 214.5781 341.3587 210.7911 v342.9287 208.4726 345.4042 209.8106 yf351.2368 214.3942 m353.7623 215.9915 351.5644 219.2375 v349.3664 222.4835 347.1824 220.2156 y344.6271 219.1617 347.1913 215.3747 v348.7613 213.0562 351.2368 214.3942 yf356.7197 220.4116 m358.9356 222.4165 356.216 225.2398 v353.4964 228.0631 351.7314 225.4557 y349.3934 223.9813 352.5663 220.6874 v354.5088 218.6707 356.7197 220.4116 yf361.4507 224.989 m364.1073 226.3571 362.2046 229.7844 v360.3019 233.2118 357.9261 231.1455 y355.2878 230.3214 357.5076 226.3228 v358.8666 223.8747 361.4507 224.989 yf367.0065 229.745 m369.1596 230.9079 367.6175 233.8212 v366.0754 236.7344 364.1499 234.9781 y362.0116 234.2776 363.8107 230.8788 v364.9122 228.7979 367.0065 229.745 yf372.6803 233.5264 m374.3544 234.2783 373.3604 236.5419 v372.3664 238.8054 370.83 237.5971 y369.1922 237.1901 370.3519 234.5494 v371.0619 232.9325 372.6803 233.5264 yf378.8183 234.4512 m380.413 234.8814 379.8515 237.0343 v379.29 239.1872 377.7527 238.3319 y376.2394 238.2031 376.8945 235.6914 v377.2956 234.1536 378.8183 234.4512 yf372.4715 216.2508 m374.9915 216.4375 374.9915 220.0775 v374.9915 223.1576 373.6848 223.5309 372.6582 223.5309 c371.9115 223.5309 370.2314 223.0643 370.6048 219.6109 c370.9781 216.1575 371.0715 216.3441 372.4715 216.2508 cf0 g297.5174 235.5245 m301.5774 236.5046 301.5775 231.0444 v301.5775 227.451 298.0774 226.4243 296.5374 226.7043 c295.5731 226.8796 292.4773 227.3577 292.944 231.9311 c290.6106 230.1578 287.9039 231.0911 v285.1971 232.0245 279.5037 234.2645 274.7436 234.2645 c269.9835 234.2645 265.2233 231.9311 265.2234 225.9577 c265.2234 221.1042 269.7968 219.9842 271.1035 219.9842 c272.4102 219.9842 274.3702 220.3575 274.3702 223.0643 c274.3702 224.931 272.0368 224.651 y270.5435 224.5576 270.5435 223.1576 v270.5435 221.7576 271.1968 221.8509 y266.7167 222.0376 266.7167 225.6777 v266.7167 229.3177 269.4234 228.5711 271.0102 228.5711 c278.0103 228.5711 282.117 220.0775 289.5839 220.0775 c297.0507 220.0775 303.1175 225.491 303.1175 231.0911 c303.1175 236.6912 299.2908 238.3713 296.024 238.3713 c292.7573 238.3713 293.3173 236.8779 293.3173 235.8512 c293.3173 234.8245 296.024 232.7711 297.5174 235.5245 cf1 g288.9305 221.5709 m281.4637 223.3443 280.997 227.451 v280.7125 229.955 286.2238 227.8244 287.7172 226.9844 c289.2105 226.1443 293.4106 222.1309 288.9305 221.5709 cf0 g287.6238 224.8376 m283.0504 223.9976 283.0504 214.5708 v283.0504 207.8506 289.2105 204.7705 y287.5305 202.6238 280.9037 202.6238 v250.8497 202.6238 246.3696 233.4245 227.0492 233.4245 c214.3556 233.4245 213.8889 226.4243 213.8889 223.5309 c213.8889 220.6376 216.129 217.9308 221.6358 217.9308 c224.4358 217.9308 225.4625 220.3575 y228.1692 214.1974 223.1291 212.7974 v226.9559 211.2107 230.1293 214.4774 v228.3559 217.0908 228.3559 219.5175 v228.3559 221.9442 231.9027 224.8376 227.7026 224.8376 c223.5025 224.8376 224.2492 221.8509 y222.6158 227.8244 229.7559 228.3844 v236.3625 228.9026 239.0895 223.3443 238.0628 216.9041 c249.0949 221.406 251.1297 210.6507 v251.7831 207.1973 250.1964 205.2372 y248.6097 203.5572 247.863 205.8906 v247.1163 208.2239 249.4497 207.4773 y251.0212 212.7531 245.9963 212.144 v242.9162 211.7707 241.5162 212.2374 241.7029 214.2908 c241.8636 216.0593 243.0096 216.4375 y245.7163 216.3441 240.9562 216.3441 v236.1961 216.3441 235.1694 208.9706 225.3692 208.9706 c215.569 208.9706 211.8356 218.2108 211.8356 222.5043 c211.8356 226.7977 213.4223 229.4111 y209.3155 226.5177 205.6754 226.5177 v202.0354 226.5177 201.2887 230.3444 203.3421 231.7445 c201.8487 232.9578 201.8487 235.1979 v201.8487 237.4379 203.8087 237.9046 205.3021 237.9046 c206.7955 237.9046 206.7955 236.9712 206.7955 235.9445 c206.7955 234.9179 205.1154 234.2645 203.7154 235.1979 c203.2487 230.8111 209.4088 230.8111 v216.689 230.8111 217.9957 239.3045 232.1827 239.3046 c257.1965 239.3046 255.7032 214.0107 280.717 214.0107 c280.717 226.2377 287.6238 224.8376 vf1 g278.6636 205.1439 m275.6769 205.0505 275.6769 208.9706 v275.6769 212.8907 278.757 212.2374 y281.4637 212.7974 281.4637 208.2239 v281.4637 205.4239 278.6636 205.1439 yf270.5068 206.2324 m267.5244 206.4182 267.8902 210.3211 v268.256 214.2241 271.2616 213.2862 y274.0088 213.5912 273.5821 209.0378 v273.3208 206.2499 270.5068 206.2324 yf262.1433 209.8106 m259.6178 211.408 261.8158 214.6539 v264.0137 217.8999 266.1977 215.632 y268.753 214.5781 266.1888 210.7911 v264.6188 208.4726 262.1433 209.8106 yf256.3107 214.3942 m253.7853 215.9915 255.9832 219.2375 v258.1811 222.4835 260.3652 220.2156 y262.9204 219.1617 260.3562 215.3747 v258.7863 213.0562 256.3107 214.3942 yf250.8278 220.4116 m248.6119 222.4165 251.3315 225.2398 v254.0511 228.0631 255.8161 225.4557 y258.1541 223.9813 254.9813 220.6874 v253.0387 218.6707 250.8278 220.4116 yf246.0968 224.989 m243.4402 226.3571 245.3429 229.7844 v247.2456 233.2118 249.6215 231.1455 y252.2598 230.3214 250.04 226.3228 v248.6809 223.8747 246.0968 224.989 yf240.541 229.745 m238.3879 230.9079 239.93 233.8212 v241.4721 236.7344 243.3976 234.9781 y245.5359 234.2776 243.7368 230.8788 v242.6353 228.7979 240.541 229.745 yf234.8673 233.5264 m233.1931 234.2783 234.1871 236.5419 v235.1811 238.8054 236.7176 237.5971 y238.3553 237.1901 237.1956 234.5494 v236.4856 232.9325 234.8673 233.5264 yf228.7293 234.4512 m227.1345 234.8814 227.696 237.0343 v228.2575 239.1872 229.7948 238.3319 y231.3081 238.2031 230.653 235.6914 v230.2519 234.1536 228.7293 234.4512 yf235.0761 216.2508 m232.556 216.4375 232.556 220.0775 v232.556 223.1576 233.8627 223.5309 234.8894 223.5309 c235.6361 223.5309 237.3161 223.0643 236.9428 219.6109 c236.5694 216.1575 236.4761 216.3441 235.0761 216.2508 cf0.25 g303.7738 181.1684 m301.4375 180.8184 301.4375 183.6884 v301.4375 186.5585 302.0937 187.5035 303.7738 187.5035 C305.4538 187.5035 306.1101 186.5585 306.1101 183.6884 c306.1101 180.8184 303.7738 181.1684 Yf0 g303.7738 194.7137 m301.8225 188.7285 298.4624 188.7285 v295.1023 188.7285 294.1923 189.9186 y294.8573 186.3835 298.1474 186.3835 v301.4375 186.3835 303.7738 189.8136 Y306.1101 186.3835 309.4001 186.3835 v312.6902 186.3835 313.3552 189.9186 y312.4452 188.7285 309.0851 188.7285 v305.725 188.7285 303.7738 194.7137 Yf1 g303.7738 215.2708 m300.2707 213.3574 300.2708 205.4706 v300.2708 200.3838 303.7738 200.2438 Y307.2768 200.3838 307.2768 205.4706 v307.2768 213.3574 303.7738 215.2708 Yf233.3085 230.2044 m233.3085 230.2044 l233.3085 230.2044 lf233.3085 230.2044 m233.3085 230.2044 l233.3085 230.2044 lf0 R0 G2.5 w459.6933 284.8056 m415.5924 241.5447 l190.8876 241.5447 l147.6267 284.8056 l147.6267 479.5147 l190.8876 522.7756 l415.5924 522.7756 l459.6933 479.5147 l459.6933 284.8056 ls%%PageTrailer%%TrailerAdobe_Illustrator88 /terminate get execAdobe_pattern /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF